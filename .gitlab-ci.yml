include:
  - remote: 'https://raw.githubusercontent.com/pnnl-miscscripts/gitlab-lib/v1/gitlab-lib.yaml'


services:
  - postgres

variables:
  POSTGRES_DB: molformula
  POSTGRES_USER: coremsdb
  POSTGRES_PASSWORD: coremsmolform
  POSTGRES_HOST_AUTH_METHOD: trust
  COREMS_DATABASE_URL: postgresql://coremsdb:coremsmolform@localhost:5432/molformula
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

stages:
  - Pytest
  - Build Python Package
  - Push to PyPi
  - Push to Gitlab Registry
  # - Push to Docker Hub
  
test-source:
  image: code-registry.emsl.pnl.gov/mass-spectrometry/corems/corems-base-310-dotnet6:2.5.3-1003
  stage: Pytest
  tags:
    - k8s 
    - rzr
    - codebuilds
  script:
    - python3 -V  # Print out python version for debugging
    # - python3 -m pip install --upgrade pip
    # - python3 -m pip install -r requirements.txt
    # - python3 -m pip install pytest
    # - python3 -m pip install pytest-cov
    - ls /builds/mass-spectrometry/corems/tests/tests_data/ftms/
    - ls .
    - python3 -c "import os; print(os.stat('/builds/mass-spectrometry/corems/tests/tests_data/ftms/NEG_ESI_LIGNIN.raw'))"
    - python3 -c "import pathlib; [p.unlink() for p in pathlib.Path('.').rglob('tests/win_only/__init__.py')]"
    - python3 -c "import os; print(os.stat('/builds/mass-spectrometry/corems/tests/tests_data/ftms/NEG_ESI_LIGNIN.raw'))"
    - |
      python3 -c "
      with open('/builds/mass-spectrometry/corems/tests/tests_data/ftms/NEG_ESI_LIGNIN.raw', 'rb') as f:
        data=f.read(256)
        print(data[:16].hex())
      "
    - tail ./ext_lib/ThermoFisher.CommonCore.RawFileReader.dll
    - md5sum ./ext_lib/ThermoFisher.CommonCore.RawFileReader.dll
    - echo $PATH
    # - |
    #   python3 -c "
    #   import sys
    #   import os
    #   import clr
    #   import datetime
    #   from pathlib import Path

    #   print(sys.path)
    #   print(os.getcwd())
    #   print(Path.cwd())
    #   sys.path.append(\"./ext_lib\")
    #   clr.AddReference(\"ThermoFisher.CommonCore.RawFileReader\")
    #   from ThermoFisher.CommonCore.RawFileReader import RawFileReaderAdapter


    #   rawfile = '/builds/mass-spectrometry/corems/tests/tests_data/ftms/NEG_ESI_LIGNIN.raw'
    #   iRawDataPlus = RawFileReaderAdapter.FileFactory(rawfile)
    #   print(\"iRawDataPlus.InAcquisition: \", iRawDataPlus.InAcquisition)
    #   print(dir(iRawDataPlus))
    #   print(type(rawfile), type(iRawDataPlus))

    #   credate = iRawDataPlus.CreationDate
    #   print(credate.get_Ticks())
    #   print(credate)
    #   print(datetime.datetime(1,1,1) + datetime.timedelta(microseconds=credate.get_Ticks()/10))
    #   " 
    # - python -m pip uninstall corems -y
    # - python3 -m pip list
    # - pytest -s -vv tests/test_aaaaa_thermo.py
    - pytest --cache-clear
  
  artifacts:
    paths:
      - doc/coverage_html_report  
 
build:
  
  stage: Build Python Package
  image: code-registry.emsl.pnl.gov/mass-spectrometry/corems/corems-base-310-dotnet6:2.5.3-1003
  tags:
    - k8s 
    - rzr
    - codebuilds
    
  script:
    
    - apt-get install libpq-dev -y
    - python3 -V  # Print out python version for debugging
    - python3 -m pip install twine
    - python3 setup.py sdist
    - python3 -m pip install dist/*
    # run the command here

  artifacts:
    paths:
      - dist/*

#pypi:
  
#  stage: Push to PyPi
#  tags:
#    - corems
#    - k8s 
#    - rzr

#  script:
#    - twine upload dist/*
  
#  only:
#    - tags


build-base-image:
  extends: .pnnllib-gitlab-build-container-image
  stage: Push to Gitlab Registry
  image: gcr.io/kaniko-project/executor:debug@sha256:71d8cf6012b67979960f5b15b85408438132d87eef599926d8931f348d045957
  tags:
  - k8s
  - rzr
  - codebuilds
  only:
    - master
  variables:
    KANIKO_EXTRA_ARGS: "--cache=true --cache-copy-layers=true --destination $CI_REGISTRY_IMAGE:latest"
    CONTEXT: $CI_PROJECT_DIR
    DOCKERFILE: Dockerfile_py310_dotnet_base
    KUBERNETES_CPU_REQUEST: 100m
    KUBERNETES_CPU_LIMIT: "2"
    KUBERNETES_MEMORY_REQUEST: 2Gi
    KUBERNETES_MEMORY_LIMIT: 8Gi
    CONTAINER_TAG: "2.5.3-1003"

# deployment:
  
#   stage: Push to Gitlab Registry
#   tags:
#     - k8s 
#     - rzr
#     - codebuilds

#   image:
    
#     name: gcr.io/kaniko-project/executor:debug
#     entrypoint: [""]
  
#   script:
    
#     - export DOCKER_CONFIG=/kaniko/.docker/
#     - export GOOGLE_APPLICATION_CREDENTIALS=/kaniko/.docker/config.json  
#     - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
#     - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile_py310_dotnet_base --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  
#   only:
#     - master
#docker push:
  
#  stage: Push to Docker Hub
#  tags:
#    - corems
#    - k8s 
#    - rzr

#  image:
    
#    name: gcr.io/kaniko-project/executor:debug
#    entrypoint: [""]
  
#  script:
#    - export DOCKER_CONFIG=/kaniko/.docker/
#    - export GOOGLE_APPLICATION_CREDENTIALS=/kaniko/.docker/config.json  
#    - echo "{\"auths\":{\"$DOCKER_HUB_REGISTRY\":{\"username\":\"$DOCKER_HUB_USER\",\"password\":\"$DOCKER_HUB_PASSWORD\"}}}" > /kaniko/.docker/config.json
#    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $MAJOR_VER
  
#  only:
#    - master
    

#pages:
#  script:
#    - pip install sphinx sphinx-rtd-theme
#    - cd doc ; make html
#    - mv build/html/ ../public/
#  artifacts:
#    paths:
#      - public
#  only:
#    - master
