# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

stages:
  - test
  - run

before_script:
  - python -V  # Print out python version for debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip install -r requirements.txt
  - pip install wheel
  - pip install pytest

test-job:
  stage: test
  tags:
    #- k8s
    - docker
    - python
  script:
    - ls .
    - python -c "import pathlib; [p.unlink() for p in pathlib.Path('.').rglob('tests/win_only/__init__.py')]"
    - python setup.py test
    - python -m pytest
    #- pip install tox flake8 pytest  # you can also use tox
    #- flake8 --exclude=venv* --statistics
    #- pytest -v --cov=calculator

run-job:
  stage: run
  tags:
    - docker
    - python
    #- k8s
  script:
    - python setup.py sdist bdist_wheel
    #- python setup.py bdist_wheel
    # an alternative approach is to install and run:
    - pip install dist/*
    # run the command here
  artifacts:
    paths:
      - dist/*.whl


#pages:
#  script:
#    - pip install sphinx sphinx-rtd-theme
#    - cd doc ; make html
#    - mv build/html/ ../public/
#  artifacts:
#    paths:
#      - public
#  only:
#    - master
